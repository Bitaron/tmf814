package protection;

/**
* protection/SwitchReason_THolder.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from protection.idl
* Wednesday, June 15, 2016 7:24:41 PM COT
*/


/**
   * <p>The switch reason reflects the reason why a
   * switch occurred.<br>
   * SR_NA is used upon retrieval of switch data for non-revertive groups, if a 
   * more precise value is not available.<br>
   * SR_RESTORED is used for revertive groups to indicate a return to the normal 
   * state.<br>
   * SR_SIGNAL_MISMATCH is used in the case the signal is ok, but is identified 
   * as coming from an incorrect source: TRAIL_TRACE_IDENTIFIER_MISMATCH, Signal 
   * Label Mismatch, etc.<br>
   * SR_AUTOMATIC_SWITCH is used when the exact switch reason is unknown,
   *  in retrievals of switch data if a protection switch is currently active
   *  or in protection switch notifications.<br>
   * SR_MANUAL indicates a switch that was requested by the operator
   * and includes forced switches.
   * </p>
   **/
public final class SwitchReason_THolder implements org.omg.CORBA.portable.Streamable
{
  public protection.SwitchReason_T value = null;

  public SwitchReason_THolder ()
  {
  }

  public SwitchReason_THolder (protection.SwitchReason_T initialValue)
  {
    value = initialValue;
  }

  public void _read (org.omg.CORBA.portable.InputStream i)
  {
    value = protection.SwitchReason_THelper.read (i);
  }

  public void _write (org.omg.CORBA.portable.OutputStream o)
  {
    protection.SwitchReason_THelper.write (o, value);
  }

  public org.omg.CORBA.TypeCode _type ()
  {
    return protection.SwitchReason_THelper.type ();
  }

}
