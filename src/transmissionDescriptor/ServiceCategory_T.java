package transmissionDescriptor;


/**
* transmissionDescriptor/ServiceCategory_T.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from transmissionDescriptor.idl
* Wednesday, June 15, 2016 7:24:43 PM COT
*/


/**
   * <p>Represents Service Categories used by Transmission 
   * Descriptors. The current Service Categories are defined
   * as follows (note that Guaranteed Bit Rate (GBR) is not 
   * defined because it is generally not used):<p>
   * <ol>
   * <li> SC_CBR = Constant Bit Rate. For connections that require
   * a sstatic amount of bandwidth that is continuously available during
   * the lifetime of the connection.</li>
   * <li> SC_VBRRT = Variable Bit Rate - Real-Time. For connections that
   * require tightly constrained delay and delay variation.</li>
   * <li> SC_VBRNRT = Variable Bit Rate - NonReal-Time. For connections
   * that have bursty traffic.</li>
   * <li> SC_ABR = Available Bit Rate. For connections that do not require
   * bounding the delay or delay variation. Not intended for real-time
   * applications.</li> 
   * <li> SC_UBR = Unspecified Bit Rate. For connections that do not require
   * tightly constrained delay and delay variation.</li> 
   * <li> SC_GFR = Guaranteed Frame Rate. For non-real-time applications that 
   * may require a minimum rate guarantee and can benefit from accessing 
   * additional bandwidth dynamically available in the network.</li> 
   * <li> SC_NA = Not Applicable</li> 
   * </ol><br>
   **/
public class ServiceCategory_T implements org.omg.CORBA.portable.IDLEntity
{
  private        int __value;
  private static int __size = 7;
  private static transmissionDescriptor.ServiceCategory_T[] __array = new transmissionDescriptor.ServiceCategory_T [__size];

  public static final int _SC_CBR = 0;
  public static final transmissionDescriptor.ServiceCategory_T SC_CBR = new transmissionDescriptor.ServiceCategory_T(_SC_CBR);
  public static final int _SC_VBRRT = 1;
  public static final transmissionDescriptor.ServiceCategory_T SC_VBRRT = new transmissionDescriptor.ServiceCategory_T(_SC_VBRRT);
  public static final int _SC_VBRNRT = 2;
  public static final transmissionDescriptor.ServiceCategory_T SC_VBRNRT = new transmissionDescriptor.ServiceCategory_T(_SC_VBRNRT);
  public static final int _SC_ABR = 3;
  public static final transmissionDescriptor.ServiceCategory_T SC_ABR = new transmissionDescriptor.ServiceCategory_T(_SC_ABR);
  public static final int _SC_UBR = 4;
  public static final transmissionDescriptor.ServiceCategory_T SC_UBR = new transmissionDescriptor.ServiceCategory_T(_SC_UBR);
  public static final int _SC_GFR = 5;
  public static final transmissionDescriptor.ServiceCategory_T SC_GFR = new transmissionDescriptor.ServiceCategory_T(_SC_GFR);
  public static final int _SC_NA = 6;
  public static final transmissionDescriptor.ServiceCategory_T SC_NA = new transmissionDescriptor.ServiceCategory_T(_SC_NA);

  public int value ()
  {
    return __value;
  }

  public static transmissionDescriptor.ServiceCategory_T from_int (int value)
  {
    if (value >= 0 && value < __size)
      return __array[value];
    else
      throw new org.omg.CORBA.BAD_PARAM ();
  }

  protected ServiceCategory_T (int value)
  {
    __value = value;
    __array[__value] = this;
  }
} // class ServiceCategory_T
