package CosNotifyChannelAdmin;


/**
* CosNotifyChannelAdmin/EventChannelFactoryOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CosNotifyChannelAdmin.idl
* Wednesday, June 15, 2016 7:24:32 PM COT
*/


/**
    * An interface for the event channel factory.
    */
public interface EventChannelFactoryOperations 
{

  /**
         * Create an event channel with specified quality of service.
         * @parm <code>initial_qos</code> - A list of name-value pair that
         * specify the desired quality of service settings for this event
         * channel.
         * @parm <code>initial_admin</code> - A list of name-value pair that
         * specify the desired administrative settings for this event channel.
         * @returns A new event channel object reference.
         * @raises UnsupportedQoS If any of the settings in the
         * <code>initial_qos</code> sequence could not be supported.
         * @raises UnsupportedAdmin If any of the settings in the
         * <code>initial_admin</code> sequence could not be supported.
         */
  CosNotifyChannelAdmin.EventChannel create_channel (CosNotification.Property[] initial_qos, CosNotification.Property[] initial_admin, org.omg.CORBA.IntHolder id) throws CosNotification.UnsupportedQoS, CosNotification.UnsupportedAdmin;

  /**
         * Get all event channels created by this factory.
         * @returns A sequence of channel object unique identifiers.
         */
  int[] get_all_channels ();

  /**
         * Get an event channel object from its ID.
         * @parm <code>id</code> - A unique identifier for the channel object.
         * @returns An <code>EventChannel</code> object reference.
         * @raises ChannelNotFound If no channel object with that ID
         * could be found.
         */
  CosNotifyChannelAdmin.EventChannel get_event_channel (int id) throws CosNotifyChannelAdmin.ChannelNotFound;
} // interface EventChannelFactoryOperations
