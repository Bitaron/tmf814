package equipment;


/**
* equipment/HolderState_T.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from equipment.idl
* Wednesday, June 15, 2016 7:24:35 PM COT
*/


/**
   * <p>Indicates the state of the equipment holder object with respect to its 
   * directly contained equipment.
   * See <a href=../../../supportingDocumentation/SD1-10_EquipmentModel.pdf >SD1-10 Equipment Model</a>. 
   * Applies when the equipment holder can contain equipment 
   * objects.</p>
   **/
public class HolderState_T implements org.omg.CORBA.portable.IDLEntity
{
  private        int __value;
  private static int __size = 7;
  private static equipment.HolderState_T[] __array = new equipment.HolderState_T [__size];

  public static final int _EMPTY = 0;
  public static final equipment.HolderState_T EMPTY = new equipment.HolderState_T(_EMPTY);
  public static final int _INSTALLED_AND_EXPECTED = 1;
  public static final equipment.HolderState_T INSTALLED_AND_EXPECTED = new equipment.HolderState_T(_INSTALLED_AND_EXPECTED);
  public static final int _EXPECTED_AND_NOT_INSTALLED = 2;
  public static final equipment.HolderState_T EXPECTED_AND_NOT_INSTALLED = new equipment.HolderState_T(_EXPECTED_AND_NOT_INSTALLED);
  public static final int _INSTALLED_AND_NOT_EXPECTED = 3;
  public static final equipment.HolderState_T INSTALLED_AND_NOT_EXPECTED = new equipment.HolderState_T(_INSTALLED_AND_NOT_EXPECTED);
  public static final int _MISMATCH_OF_INSTALLED_AND_EXPECTED = 4;
  public static final equipment.HolderState_T MISMATCH_OF_INSTALLED_AND_EXPECTED = new equipment.HolderState_T(_MISMATCH_OF_INSTALLED_AND_EXPECTED);
  public static final int _UNAVAILABLE = 5;
  public static final equipment.HolderState_T UNAVAILABLE = new equipment.HolderState_T(_UNAVAILABLE);
  public static final int _UNKNOWN = 6;
  public static final equipment.HolderState_T UNKNOWN = new equipment.HolderState_T(_UNKNOWN);

  public int value ()
  {
    return __value;
  }

  public static equipment.HolderState_T from_int (int value)
  {
    if (value >= 0 && value < __size)
      return __array[value];
    else
      throw new org.omg.CORBA.BAD_PARAM ();
  }

  protected HolderState_T (int value)
  {
    __value = value;
    __array[__value] = this;
  }
} // class HolderState_T
