package CosNotifyComm;


/**
* CosNotifyComm/SequencePullSupplierOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CosNotifyComm.idl
* Wednesday, June 15, 2016 7:24:32 PM COT
*/


/**
    * An interface for sequences pull suppliers.
    */
public interface SequencePullSupplierOperations  extends CosNotifyComm.NotifySubscribeOperations
{

  /**
         * Pull a sequence of events from this supplier
         * @parm <code>max_number</code> - The maximum number of events to
         * retrieve.
         * @returns The event sequence.
         * @raises Disconnected If this supplier is disconnected.
         */
  CosNotification.StructuredEvent[] pull_structured_events (int max_number) throws CosEventComm.Disconnected;

  /**
         * Try to pull a sequence of structured events from this supplier.
         * @parm <code>max_number</code> - The maximum number of events to
         * retrieve.
         * @parm <code>has_event</code> - boolean indicating if supplier has
         * an event.
         * @returns The event sequence.
         * @raises Disconnected If this supplier is disconnected.
         */
  CosNotification.StructuredEvent[] try_pull_structured_events (int max_number, org.omg.CORBA.BooleanHolder has_event) throws CosEventComm.Disconnected;

  /**
         * Disconnect this pull supplier.
         */
  void disconnect_sequence_pull_supplier ();
} // interface SequencePullSupplierOperations
