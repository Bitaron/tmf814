package DsLogAdmin;


/**
* DsLogAdmin/LogPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from DsLogAdmin.idl
* Wednesday, June 15, 2016 7:24:34 PM COT
*/

public abstract class LogPOA extends org.omg.PortableServer.Servant
 implements DsLogAdmin.LogOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("my_factory", new java.lang.Integer (0));
    _methods.put ("id", new java.lang.Integer (1));
    _methods.put ("get_log_qos", new java.lang.Integer (2));
    _methods.put ("set_log_qos", new java.lang.Integer (3));
    _methods.put ("get_max_record_life", new java.lang.Integer (4));
    _methods.put ("set_max_record_life", new java.lang.Integer (5));
    _methods.put ("get_max_size", new java.lang.Integer (6));
    _methods.put ("set_max_size", new java.lang.Integer (7));
    _methods.put ("get_current_size", new java.lang.Integer (8));
    _methods.put ("get_n_records", new java.lang.Integer (9));
    _methods.put ("get_log_full_action", new java.lang.Integer (10));
    _methods.put ("set_log_full_action", new java.lang.Integer (11));
    _methods.put ("get_administrative_state", new java.lang.Integer (12));
    _methods.put ("set_administrative_state", new java.lang.Integer (13));
    _methods.put ("get_forwarding_state", new java.lang.Integer (14));
    _methods.put ("set_forwarding_state", new java.lang.Integer (15));
    _methods.put ("get_operational_state", new java.lang.Integer (16));
    _methods.put ("get_interval", new java.lang.Integer (17));
    _methods.put ("set_interval", new java.lang.Integer (18));
    _methods.put ("get_availability_status", new java.lang.Integer (19));
    _methods.put ("get_capacity_alarm_thresholds", new java.lang.Integer (20));
    _methods.put ("set_capacity_alarm_thresholds", new java.lang.Integer (21));
    _methods.put ("get_week_mask", new java.lang.Integer (22));
    _methods.put ("set_week_mask", new java.lang.Integer (23));
    _methods.put ("query", new java.lang.Integer (24));
    _methods.put ("retrieve", new java.lang.Integer (25));
    _methods.put ("match", new java.lang.Integer (26));
    _methods.put ("delete_records", new java.lang.Integer (27));
    _methods.put ("delete_records_by_id", new java.lang.Integer (28));
    _methods.put ("write_records", new java.lang.Integer (29));
    _methods.put ("set_record_attribute", new java.lang.Integer (30));
    _methods.put ("set_records_attribute", new java.lang.Integer (31));
    _methods.put ("get_record_attribute", new java.lang.Integer (32));
    _methods.put ("copy", new java.lang.Integer (33));
    _methods.put ("copy_with_id", new java.lang.Integer (34));
    _methods.put ("flush", new java.lang.Integer (35));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // DsLogAdmin/Log/my_factory
       {
         DsLogAdmin.LogMgr $result = null;
         $result = this.my_factory ();
         out = $rh.createReply();
         DsLogAdmin.LogMgrHelper.write (out, $result);
         break;
       }

       case 1:  // DsLogAdmin/Log/id
       {
         int $result = (int)0;
         $result = this.id ();
         out = $rh.createReply();
         out.write_ulong ($result);
         break;
       }

       case 2:  // DsLogAdmin/Log/get_log_qos
       {
         short $result[] = null;
         $result = this.get_log_qos ();
         out = $rh.createReply();
         DsLogAdmin.QoSListHelper.write (out, $result);
         break;
       }

       case 3:  // DsLogAdmin/Log/set_log_qos
       {
         try {
           short qos[] = DsLogAdmin.QoSListHelper.read (in);
           this.set_log_qos (qos);
           out = $rh.createReply();
         } catch (DsLogAdmin.UnsupportedQoS $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.UnsupportedQoSHelper.write (out, $ex);
         }
         break;
       }


  // life in seconds (0 infinite)
       case 4:  // DsLogAdmin/Log/get_max_record_life
       {
         int $result = (int)0;
         $result = this.get_max_record_life ();
         out = $rh.createReply();
         out.write_ulong ($result);
         break;
       }

       case 5:  // DsLogAdmin/Log/set_max_record_life
       {
         int life = in.read_ulong ();
         this.set_max_record_life (life);
         out = $rh.createReply();
         break;
       }


  // size in octets
       case 6:  // DsLogAdmin/Log/get_max_size
       {
         long $result = (long)0;
         $result = this.get_max_size ();
         out = $rh.createReply();
         out.write_ulonglong ($result);
         break;
       }

       case 7:  // DsLogAdmin/Log/set_max_size
       {
         try {
           long size = in.read_ulonglong ();
           this.set_max_size (size);
           out = $rh.createReply();
         } catch (DsLogAdmin.InvalidParam $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidParamHelper.write (out, $ex);
         }
         break;
       }

       case 8:  // DsLogAdmin/Log/get_current_size
       {
         long $result = (long)0;
         $result = this.get_current_size ();
         out = $rh.createReply();
         out.write_ulonglong ($result);
         break;
       }


  // size in octets
       case 9:  // DsLogAdmin/Log/get_n_records
       {
         long $result = (long)0;
         $result = this.get_n_records ();
         out = $rh.createReply();
         out.write_ulonglong ($result);
         break;
       }


  // number of records
       case 10:  // DsLogAdmin/Log/get_log_full_action
       {
         short $result = (short)0;
         $result = this.get_log_full_action ();
         out = $rh.createReply();
         out.write_ushort ($result);
         break;
       }

       case 11:  // DsLogAdmin/Log/set_log_full_action
       {
         try {
           short action = DsLogAdmin.LogFullActionTypeHelper.read (in);
           this.set_log_full_action (action);
           out = $rh.createReply();
         } catch (DsLogAdmin.InvalidLogFullAction $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidLogFullActionHelper.write (out, $ex);
         }
         break;
       }

       case 12:  // DsLogAdmin/Log/get_administrative_state
       {
         DsLogAdmin.AdministrativeState $result = null;
         $result = this.get_administrative_state ();
         out = $rh.createReply();
         DsLogAdmin.AdministrativeStateHelper.write (out, $result);
         break;
       }

       case 13:  // DsLogAdmin/Log/set_administrative_state
       {
         DsLogAdmin.AdministrativeState state = DsLogAdmin.AdministrativeStateHelper.read (in);
         this.set_administrative_state (state);
         out = $rh.createReply();
         break;
       }

       case 14:  // DsLogAdmin/Log/get_forwarding_state
       {
         DsLogAdmin.ForwardingState $result = null;
         $result = this.get_forwarding_state ();
         out = $rh.createReply();
         DsLogAdmin.ForwardingStateHelper.write (out, $result);
         break;
       }

       case 15:  // DsLogAdmin/Log/set_forwarding_state
       {
         DsLogAdmin.ForwardingState state = DsLogAdmin.ForwardingStateHelper.read (in);
         this.set_forwarding_state (state);
         out = $rh.createReply();
         break;
       }

       case 16:  // DsLogAdmin/Log/get_operational_state
       {
         DsLogAdmin.OperationalState $result = null;
         $result = this.get_operational_state ();
         out = $rh.createReply();
         DsLogAdmin.OperationalStateHelper.write (out, $result);
         break;
       }


  // log duration
       case 17:  // DsLogAdmin/Log/get_interval
       {
         DsLogAdmin.TimeInterval $result = null;
         $result = this.get_interval ();
         out = $rh.createReply();
         DsLogAdmin.TimeIntervalHelper.write (out, $result);
         break;
       }

       case 18:  // DsLogAdmin/Log/set_interval
       {
         try {
           DsLogAdmin.TimeInterval interval = DsLogAdmin.TimeIntervalHelper.read (in);
           this.set_interval (interval);
           out = $rh.createReply();
         } catch (DsLogAdmin.InvalidTime $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidTimeHelper.write (out, $ex);
         } catch (DsLogAdmin.InvalidTimeInterval $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidTimeIntervalHelper.write (out, $ex);
         }
         break;
       }


  // availability status
       case 19:  // DsLogAdmin/Log/get_availability_status
       {
         DsLogAdmin.AvailabilityStatus $result = null;
         $result = this.get_availability_status ();
         out = $rh.createReply();
         DsLogAdmin.AvailabilityStatusHelper.write (out, $result);
         break;
       }


  // capacity alarm threshold
       case 20:  // DsLogAdmin/Log/get_capacity_alarm_thresholds
       {
         short $result[] = null;
         $result = this.get_capacity_alarm_thresholds ();
         out = $rh.createReply();
         DsLogAdmin.CapacityAlarmThresholdListHelper.write (out, $result);
         break;
       }

       case 21:  // DsLogAdmin/Log/set_capacity_alarm_thresholds
       {
         try {
           short threshs[] = DsLogAdmin.CapacityAlarmThresholdListHelper.read (in);
           this.set_capacity_alarm_thresholds (threshs);
           out = $rh.createReply();
         } catch (DsLogAdmin.InvalidThreshold $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidThresholdHelper.write (out, $ex);
         }
         break;
       }


  // weekly scheduling
       case 22:  // DsLogAdmin/Log/get_week_mask
       {
         DsLogAdmin.WeekMaskItem $result[] = null;
         $result = this.get_week_mask ();
         out = $rh.createReply();
         DsLogAdmin.WeekMaskHelper.write (out, $result);
         break;
       }

       case 23:  // DsLogAdmin/Log/set_week_mask
       {
         try {
           DsLogAdmin.WeekMaskItem masks[] = DsLogAdmin.WeekMaskHelper.read (in);
           this.set_week_mask (masks);
           out = $rh.createReply();
         } catch (DsLogAdmin.InvalidTime $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidTimeHelper.write (out, $ex);
         } catch (DsLogAdmin.InvalidTimeInterval $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidTimeIntervalHelper.write (out, $ex);
         } catch (DsLogAdmin.InvalidMask $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidMaskHelper.write (out, $ex);
         }
         break;
       }

       case 24:  // DsLogAdmin/Log/query
       {
         try {
           String grammar = in.read_string ();
           String c = DsLogAdmin.ConstraintHelper.read (in);
           DsLogAdmin.IteratorHolder i = new DsLogAdmin.IteratorHolder ();
           DsLogAdmin.LogRecord $result[] = null;
           $result = this.query (grammar, c, i);
           out = $rh.createReply();
           DsLogAdmin.RecordListHelper.write (out, $result);
           DsLogAdmin.IteratorHelper.write (out, i.value);
         } catch (DsLogAdmin.InvalidGrammar $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidGrammarHelper.write (out, $ex);
         } catch (DsLogAdmin.InvalidConstraint $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidConstraintHelper.write (out, $ex);
         }
         break;
       }


  // negative how_many indicates backwards retrieval
       case 25:  // DsLogAdmin/Log/retrieve
       {
         long from_time = DsLogAdmin.TimeTHelper.read (in);
         int how_many = in.read_long ();
         DsLogAdmin.IteratorHolder i = new DsLogAdmin.IteratorHolder ();
         DsLogAdmin.LogRecord $result[] = null;
         $result = this.retrieve (from_time, how_many, i);
         out = $rh.createReply();
         DsLogAdmin.RecordListHelper.write (out, $result);
         DsLogAdmin.IteratorHelper.write (out, i.value);
         break;
       }


  // returns number of records matching constraint
       case 26:  // DsLogAdmin/Log/match
       {
         try {
           String grammar = in.read_string ();
           String c = DsLogAdmin.ConstraintHelper.read (in);
           int $result = (int)0;
           $result = this.match (grammar, c);
           out = $rh.createReply();
           out.write_ulong ($result);
         } catch (DsLogAdmin.InvalidGrammar $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidGrammarHelper.write (out, $ex);
         } catch (DsLogAdmin.InvalidConstraint $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidConstraintHelper.write (out, $ex);
         }
         break;
       }


  // returns number of records deleted
       case 27:  // DsLogAdmin/Log/delete_records
       {
         try {
           String grammar = in.read_string ();
           String c = DsLogAdmin.ConstraintHelper.read (in);
           int $result = (int)0;
           $result = this.delete_records (grammar, c);
           out = $rh.createReply();
           out.write_ulong ($result);
         } catch (DsLogAdmin.InvalidGrammar $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidGrammarHelper.write (out, $ex);
         } catch (DsLogAdmin.InvalidConstraint $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidConstraintHelper.write (out, $ex);
         }
         break;
       }

       case 28:  // DsLogAdmin/Log/delete_records_by_id
       {
         long ids[] = DsLogAdmin.RecordIdListHelper.read (in);
         int $result = (int)0;
         $result = this.delete_records_by_id (ids);
         out = $rh.createReply();
         out.write_ulong ($result);
         break;
       }

       case 29:  // DsLogAdmin/Log/write_records
       {
         try {
           org.omg.CORBA.Any records[] = DsLogAdmin.AnysHelper.read (in);
           this.write_records (records);
           out = $rh.createReply();
         } catch (DsLogAdmin.LogFull $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.LogFullHelper.write (out, $ex);
         } catch (DsLogAdmin.LogOffDuty $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.LogOffDutyHelper.write (out, $ex);
         } catch (DsLogAdmin.LogLocked $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.LogLockedHelper.write (out, $ex);
         } catch (DsLogAdmin.LogDisabled $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.LogDisabledHelper.write (out, $ex);
         }
         break;
       }


  // set single record attributes
       case 30:  // DsLogAdmin/Log/set_record_attribute
       {
         try {
           long id = DsLogAdmin.RecordIdHelper.read (in);
           DsLogAdmin.NVPair attr_list[] = DsLogAdmin.NVListHelper.read (in);
           this.set_record_attribute (id, attr_list);
           out = $rh.createReply();
         } catch (DsLogAdmin.InvalidRecordId $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidRecordIdHelper.write (out, $ex);
         } catch (DsLogAdmin.InvalidAttribute $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidAttributeHelper.write (out, $ex);
         }
         break;
       }


  // returns number of records whose attributes have been set
       case 31:  // DsLogAdmin/Log/set_records_attribute
       {
         try {
           String grammar = in.read_string ();
           String c = DsLogAdmin.ConstraintHelper.read (in);
           DsLogAdmin.NVPair attr_list[] = DsLogAdmin.NVListHelper.read (in);
           int $result = (int)0;
           $result = this.set_records_attribute (grammar, c, attr_list);
           out = $rh.createReply();
           out.write_ulong ($result);
         } catch (DsLogAdmin.InvalidGrammar $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidGrammarHelper.write (out, $ex);
         } catch (DsLogAdmin.InvalidConstraint $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidConstraintHelper.write (out, $ex);
         } catch (DsLogAdmin.InvalidAttribute $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidAttributeHelper.write (out, $ex);
         }
         break;
       }


  // get record attributes
       case 32:  // DsLogAdmin/Log/get_record_attribute
       {
         try {
           long id = DsLogAdmin.RecordIdHelper.read (in);
           DsLogAdmin.NVPair $result[] = null;
           $result = this.get_record_attribute (id);
           out = $rh.createReply();
           DsLogAdmin.NVListHelper.write (out, $result);
         } catch (DsLogAdmin.InvalidRecordId $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.InvalidRecordIdHelper.write (out, $ex);
         }
         break;
       }

       case 33:  // DsLogAdmin/Log/copy
       {
         org.omg.CORBA.IntHolder id = new org.omg.CORBA.IntHolder ();
         DsLogAdmin.Log $result = null;
         $result = this.copy (id);
         out = $rh.createReply();
         DsLogAdmin.LogHelper.write (out, $result);
         DsLogAdmin.LogIdHelper.write (out, id.value);
         break;
       }

       case 34:  // DsLogAdmin/Log/copy_with_id
       {
         try {
           int id = DsLogAdmin.LogIdHelper.read (in);
           DsLogAdmin.Log $result = null;
           $result = this.copy_with_id (id);
           out = $rh.createReply();
           DsLogAdmin.LogHelper.write (out, $result);
         } catch (DsLogAdmin.LogIdAlreadyExists $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.LogIdAlreadyExistsHelper.write (out, $ex);
         }
         break;
       }

       case 35:  // DsLogAdmin/Log/flush
       {
         try {
           this.flush ();
           out = $rh.createReply();
         } catch (DsLogAdmin.UnsupportedQoS $ex) {
           out = $rh.createExceptionReply ();
           DsLogAdmin.UnsupportedQoSHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:omg.org/DsLogAdmin/Log:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Log _this() 
  {
    return LogHelper.narrow(
    super._this_object());
  }

  public Log _this(org.omg.CORBA.ORB orb) 
  {
    return LogHelper.narrow(
    super._this_object(orb));
  }


} // class LogPOA
