package flowDomain;


/**
* flowDomain/ConnectivityRequirement_T.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from flowDomain.idl
* Wednesday, June 15, 2016 7:24:36 PM COT
*/


/**
   * <p> This attribute shall identify (for a "connectivity-aware" EMS) 
   * the requested operation mode in case not all FPs have potential connectivity 
   * to one another. If the EMS is not connectivity-aware, this parameter is ignored.
   * It shall have one of the following values: <br>
   * CR_IGNORE: in case not all FPs have potential connectivity to one another, 
   * add all Flow Points regardless of potential connectivity (default value).
   * CR_REJECT: in case not all FPs have potential connectivity 
   * to one another, reject the request. <br>
   *    <br>
   * </p>
   **/
public class ConnectivityRequirement_T implements org.omg.CORBA.portable.IDLEntity
{
  private        int __value;
  private static int __size = 2;
  private static flowDomain.ConnectivityRequirement_T[] __array = new flowDomain.ConnectivityRequirement_T [__size];

  public static final int _CR_IGNORE = 0;
  public static final flowDomain.ConnectivityRequirement_T CR_IGNORE = new flowDomain.ConnectivityRequirement_T(_CR_IGNORE);
  public static final int _CR_REJECT = 1;
  public static final flowDomain.ConnectivityRequirement_T CR_REJECT = new flowDomain.ConnectivityRequirement_T(_CR_REJECT);

  public int value ()
  {
    return __value;
  }

  public static flowDomain.ConnectivityRequirement_T from_int (int value)
  {
    if (value >= 0 && value < __size)
      return __array[value];
    else
      throw new org.omg.CORBA.BAD_PARAM ();
  }

  protected ConnectivityRequirement_T (int value)
  {
    __value = value;
    __array[__value] = this;
  }
} // class ConnectivityRequirement_T
