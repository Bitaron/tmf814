package performance;


/**
* performance/PMThresholdType_THelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from performance.idl
* Wednesday, June 15, 2016 7:24:40 PM COT
*/


/**
   * <p>Describes threshold types (watermark levels) for TCA parameters.</p> 
   * 
   * <p>The TWM_HIGH and TWM_HIGHEST types are used for TCAs that are raised 
   * when the measured value goes above the threshold. The TWM_LOW 
   * and TWM_LOWEST types are used for TCAs that are raised when the 
   * measured value goes below the threshold (only apply to gauges).</p>
   *
   * <p>When there is only one level of TCA trigger, only TWM_HIGH and/or 
   * TWM_LOW are used. When there are two levels of TCA triggers, 
   * TWM_HIGHEST and/or TWM_LOWEST are used in addition.
   * </p>
   *
   * <p>See <a href=../../../supportingDocumentation/SD1-37_TCAs.pdf >SD1-37 PM Threshold Types</a>
   * for information on how water mark levels are used.</p>
   **/
abstract public class PMThresholdType_THelper
{
  private static String  _id = "IDL:mtnm.tmforum.org/performance/PMThresholdType_T:1.0";

  public static void insert (org.omg.CORBA.Any a, performance.PMThresholdType_T that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static performance.PMThresholdType_T extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      __typeCode = org.omg.CORBA.ORB.init ().create_enum_tc (performance.PMThresholdType_THelper.id (), "PMThresholdType_T", new String[] { "TWM_HIGHEST", "TWM_HIGH", "TWM_LOW", "TWM_LOWEST"} );
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static performance.PMThresholdType_T read (org.omg.CORBA.portable.InputStream istream)
  {
    return performance.PMThresholdType_T.from_int (istream.read_long ());
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, performance.PMThresholdType_T value)
  {
    ostream.write_long (value.value ());
  }

}
