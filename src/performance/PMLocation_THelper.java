package performance;


/**
* performance/PMLocation_THelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from performance.idl
* Wednesday, June 15, 2016 7:24:40 PM COT
*/


/** 
   * <p>Specification of PM location (see also   
   * <a href=../../../supportingDocumentation/SD1-19_LocationIdentification.pdf >
   * Location Identification</a> for further details).</p>
   *
   * <p>PM parameters may relate to measurements taken on receive or transmit 
   * traffic either at the named TP (PML_NEAR_END_Rx/Tx) or at the TP at the 
   * far end of the trail (circuit/path) connected to the named TP 
   * (PML_FAR_END_Rx/Tx). Alternatively, the PM parameters may be bidirectional 
   * (PML_BIDIRECTIONAL) e.g. resulting from a second by second summation and 
   * evaluation of both far and near TPs .</p>
   * Valid values are:<br>
   * "PML_NEAR_END_Rx"<br>
   * "PML_FAR_END_Rx"<br>
   * "PML_NEAR_END_Tx"<br>
   * "PML_FAR_END_Tx"<br>
   * "PML_BIDIRECTIONAL"<br>
   * "PML_CONTRA_NEAR_END_Rx"<br>
   * "PML_CONTRA_FAR_END_Rx"<br>
   * <br>
   **/
abstract public class PMLocation_THelper
{
  private static String  _id = "IDL:mtnm.tmforum.org/performance/PMLocation_T:1.0";

  public static void insert (org.omg.CORBA.Any a, String that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static String extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      __typeCode = org.omg.CORBA.ORB.init ().create_string_tc (0);
      __typeCode = org.omg.CORBA.ORB.init ().create_alias_tc (performance.PMLocation_THelper.id (), "PMLocation_T", __typeCode);
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static String read (org.omg.CORBA.portable.InputStream istream)
  {
    String value = null;
    value = istream.read_string ();
    return value;
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, String value)
  {
    ostream.write_string (value);
  }

}
