package softwareAndDataManager;


/**
* softwareAndDataManager/SoftwareAndDataMgr_IHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from softwareAndDataManager.idl
* Wednesday, June 15, 2016 7:24:41 PM COT
*/


/**
   * <p>Managed Elements store configuration data and maintain this on a real 
   * time basis (the ME configuration data). This configuration data include 
   * service data, related to ports, facilities, cross connects etc. The format 
   * and structure of this data is proprietary in nature.</p>
   *
   * <p>Most service providers consider it important to take backup of this data 
   * periodically. This backup data can be archived outside of the ME and if 
   * necessary can be restored back onto the ME.</p>
   *
   * <p> The MTNM interface supports database backup on demand from the NMS. The 
   * storage of these backups is a local matter of the EMS and backup is not 
   * transferred across this interface to the NMS. The EMS may store more than 
   * one backup for each ME. How many backups are stored for each ME is a local 
   * matter of EMS (potentially configurable within the EMS). A new backup may 
   * override the oldest backup existing in the EMS.</p> 
   *
   * <p>To give an example, if an EMS is configured to store only 2 backups for 
   * each ME, the third backup will over-write the first backup (oldest).</p> 
   *
   * <p>Each backup is identified by the Managed Element Name and the Date and 
   * Time when the backup was taken by the EMS.</p>
   *
   * <p>The softwareAndDataManager is used to gain access to operations related 
   * to backing up ME configuration data.</p>
   *
   * <p>A handle to an instance of this interface is gained via the
   * emsSession::EmsSession_I::getManager() operation in Manager.</p>
   **/
abstract public class SoftwareAndDataMgr_IHelper
{
  private static String  _id = "IDL:mtnm.tmforum.org/softwareAndDataManager/SoftwareAndDataMgr_I:1.0";

  public static void insert (org.omg.CORBA.Any a, softwareAndDataManager.SoftwareAndDataMgr_I that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static softwareAndDataManager.SoftwareAndDataMgr_I extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      __typeCode = org.omg.CORBA.ORB.init ().create_interface_tc (softwareAndDataManager.SoftwareAndDataMgr_IHelper.id (), "SoftwareAndDataMgr_I");
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static softwareAndDataManager.SoftwareAndDataMgr_I read (org.omg.CORBA.portable.InputStream istream)
  {
    return narrow (istream.read_Object (_SoftwareAndDataMgr_IStub.class));
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, softwareAndDataManager.SoftwareAndDataMgr_I value)
  {
    ostream.write_Object ((org.omg.CORBA.Object) value);
  }

  public static softwareAndDataManager.SoftwareAndDataMgr_I narrow (org.omg.CORBA.Object obj)
  {
    if (obj == null)
      return null;
    else if (obj instanceof softwareAndDataManager.SoftwareAndDataMgr_I)
      return (softwareAndDataManager.SoftwareAndDataMgr_I)obj;
    else if (!obj._is_a (id ()))
      throw new org.omg.CORBA.BAD_PARAM ();
    else
    {
      org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl)obj)._get_delegate ();
      softwareAndDataManager._SoftwareAndDataMgr_IStub stub = new softwareAndDataManager._SoftwareAndDataMgr_IStub ();
      stub._set_delegate(delegate);
      return stub;
    }
  }

  public static softwareAndDataManager.SoftwareAndDataMgr_I unchecked_narrow (org.omg.CORBA.Object obj)
  {
    if (obj == null)
      return null;
    else if (obj instanceof softwareAndDataManager.SoftwareAndDataMgr_I)
      return (softwareAndDataManager.SoftwareAndDataMgr_I)obj;
    else
    {
      org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl)obj)._get_delegate ();
      softwareAndDataManager._SoftwareAndDataMgr_IStub stub = new softwareAndDataManager._SoftwareAndDataMgr_IStub ();
      stub._set_delegate(delegate);
      return stub;
    }
  }

}
