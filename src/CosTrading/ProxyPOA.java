package CosTrading;


/**
* CosTrading/ProxyPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CosTrading.idl
* Wednesday, June 15, 2016 7:24:33 PM COT
*/


/** This interface supports proxy offers.
 * It is not yet supported.
 */
public abstract class ProxyPOA extends org.omg.PortableServer.Servant
 implements CosTrading.ProxyOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("export_proxy", new java.lang.Integer (0));
    _methods.put ("withdraw_proxy", new java.lang.Integer (1));
    _methods.put ("describe_proxy", new java.lang.Integer (2));
    _methods.put ("_get_lookup_if", new java.lang.Integer (3));
    _methods.put ("_get_register_if", new java.lang.Integer (4));
    _methods.put ("_get_link_if", new java.lang.Integer (5));
    _methods.put ("_get_proxy_if", new java.lang.Integer (6));
    _methods.put ("_get_admin_if", new java.lang.Integer (7));
    _methods.put ("_get_supports_modifiable_properties", new java.lang.Integer (8));
    _methods.put ("_get_supports_dynamic_properties", new java.lang.Integer (9));
    _methods.put ("_get_supports_proxy_offers", new java.lang.Integer (10));
    _methods.put ("_get_type_repos", new java.lang.Integer (11));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  /* doc: 51 */
       case 0:  // CosTrading/Proxy/export_proxy
       {
         try {
           CosTrading.Lookup target = CosTrading.LookupHelper.read (in);
           String type = CosTrading.ServiceTypeNameHelper.read (in);
           CosTrading.Property properties[] = CosTrading.PropertySeqHelper.read (in);
           boolean if_match_all = in.read_boolean ();
           String recipe = CosTrading.ProxyPackage.ConstraintRecipeHelper.read (in);
           CosTrading.Policy policies_to_pass_on[] = CosTrading.PolicySeqHelper.read (in);
           String $result = null;
           $result = this.export_proxy (target, type, properties, if_match_all, recipe, policies_to_pass_on);
           out = $rh.createReply();
           out.write_string ($result);
         } catch (CosTrading.IllegalServiceType $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.IllegalServiceTypeHelper.write (out, $ex);
         } catch (CosTrading.UnknownServiceType $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.UnknownServiceTypeHelper.write (out, $ex);
         } catch (CosTrading.InvalidLookupRef $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.InvalidLookupRefHelper.write (out, $ex);
         } catch (CosTrading.IllegalPropertyName $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.IllegalPropertyNameHelper.write (out, $ex);
         } catch (CosTrading.PropertyTypeMismatch $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.PropertyTypeMismatchHelper.write (out, $ex);
         } catch (CosTrading.ReadonlyDynamicProperty $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.ReadonlyDynamicPropertyHelper.write (out, $ex);
         } catch (CosTrading.MissingMandatoryProperty $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.MissingMandatoryPropertyHelper.write (out, $ex);
         } catch (CosTrading.ProxyPackage.IllegalRecipe $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.ProxyPackage.IllegalRecipeHelper.write (out, $ex);
         } catch (CosTrading.DuplicatePropertyName $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.DuplicatePropertyNameHelper.write (out, $ex);
         } catch (CosTrading.DuplicatePolicyName $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.DuplicatePolicyNameHelper.write (out, $ex);
         }
         break;
       }


  /* enddoc */
       case 1:  // CosTrading/Proxy/withdraw_proxy
       {
         try {
           String id = CosTrading.OfferIdHelper.read (in);
           this.withdraw_proxy (id);
           out = $rh.createReply();
         } catch (CosTrading.IllegalOfferId $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.IllegalOfferIdHelper.write (out, $ex);
         } catch (CosTrading.UnknownOfferId $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.UnknownOfferIdHelper.write (out, $ex);
         } catch (CosTrading.ProxyPackage.NotProxyOfferId $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.ProxyPackage.NotProxyOfferIdHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // CosTrading/Proxy/describe_proxy
       {
         try {
           String id = CosTrading.OfferIdHelper.read (in);
           CosTrading.ProxyPackage.ProxyInfo $result = null;
           $result = this.describe_proxy (id);
           out = $rh.createReply();
           CosTrading.ProxyPackage.ProxyInfoHelper.write (out, $result);
         } catch (CosTrading.IllegalOfferId $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.IllegalOfferIdHelper.write (out, $ex);
         } catch (CosTrading.UnknownOfferId $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.UnknownOfferIdHelper.write (out, $ex);
         } catch (CosTrading.ProxyPackage.NotProxyOfferId $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.ProxyPackage.NotProxyOfferIdHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // CosTrading/TraderComponents/_get_lookup_if
       {
         CosTrading.Lookup $result = null;
         $result = this.lookup_if ();
         out = $rh.createReply();
         CosTrading.LookupHelper.write (out, $result);
         break;
       }

       case 4:  // CosTrading/TraderComponents/_get_register_if
       {
         CosTrading.Register $result = null;
         $result = this.register_if ();
         out = $rh.createReply();
         CosTrading.RegisterHelper.write (out, $result);
         break;
       }

       case 5:  // CosTrading/TraderComponents/_get_link_if
       {
         CosTrading.Link $result = null;
         $result = this.link_if ();
         out = $rh.createReply();
         CosTrading.LinkHelper.write (out, $result);
         break;
       }

       case 6:  // CosTrading/TraderComponents/_get_proxy_if
       {
         CosTrading.Proxy $result = null;
         $result = this.proxy_if ();
         out = $rh.createReply();
         CosTrading.ProxyHelper.write (out, $result);
         break;
       }

       case 7:  // CosTrading/TraderComponents/_get_admin_if
       {
         CosTrading.Admin $result = null;
         $result = this.admin_if ();
         out = $rh.createReply();
         CosTrading.AdminHelper.write (out, $result);
         break;
       }

       case 8:  // CosTrading/SupportAttributes/_get_supports_modifiable_properties
       {
         boolean $result = false;
         $result = this.supports_modifiable_properties ();
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 9:  // CosTrading/SupportAttributes/_get_supports_dynamic_properties
       {
         boolean $result = false;
         $result = this.supports_dynamic_properties ();
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 10:  // CosTrading/SupportAttributes/_get_supports_proxy_offers
       {
         boolean $result = false;
         $result = this.supports_proxy_offers ();
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 11:  // CosTrading/SupportAttributes/_get_type_repos
       {
         org.omg.CORBA.Object $result = null;
         $result = this.type_repos ();
         out = $rh.createReply();
         org.omg.CORBA.ObjectHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:omg.org/CosTrading/Proxy:1.0", 
    "IDL:omg.org/CosTrading/TraderComponents:1.0", 
    "IDL:omg.org/CosTrading/SupportAttributes:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Proxy _this() 
  {
    return ProxyHelper.narrow(
    super._this_object());
  }

  public Proxy _this(org.omg.CORBA.ORB orb) 
  {
    return ProxyHelper.narrow(
    super._this_object(orb));
  }


} // class ProxyPOA
