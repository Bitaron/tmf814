package CosTrading;


/**
* CosTrading/RegisterOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CosTrading.idl
* Wednesday, June 15, 2016 7:24:33 PM COT
*/


/** This interface is used export offers of service to
 * the trader and manage these offers.
 */
public interface RegisterOperations  extends CosTrading.TraderComponentsOperations, CosTrading.SupportAttributesOperations
{

  /* doc: 37 */
  String export (org.omg.CORBA.Object reference, String type, CosTrading.Property[] properties) throws CosTrading.RegisterPackage.InvalidObjectRef, CosTrading.IllegalServiceType, CosTrading.UnknownServiceType, CosTrading.RegisterPackage.InterfaceTypeMismatch, CosTrading.IllegalPropertyName, CosTrading.PropertyTypeMismatch, CosTrading.ReadonlyDynamicProperty, CosTrading.MissingMandatoryProperty, CosTrading.DuplicatePropertyName;

  /* doc: 35 */
  void withdraw (String id) throws CosTrading.IllegalOfferId, CosTrading.UnknownOfferId, CosTrading.RegisterPackage.ProxyOfferId;

  /* doc: 31 */
  CosTrading.RegisterPackage.OfferInfo describe (String id) throws CosTrading.IllegalOfferId, CosTrading.UnknownOfferId, CosTrading.RegisterPackage.ProxyOfferId;

  /** This operation modifies the properties supported
   * by a traded offer of service. Properties that are read-only
   * or mandatory may not be deleted and properties that are
   * read-only may not be modified.
   *
   * @param id - The identifier of the offer to be modified.
   * @param del_list - The list of properties to be deleted.
   * @param modify_list - The list of properties to be added or modified.
   *
   * @raises NotImplemented - If this operation is not implemented by the trader.
   * @raises IllegalOfferId - If the format of the offer identifier is invalid.
   * @raises UnknownOfferId - If the trader knows nothing of the identified offer.
   * @raises ProxyOfferId - The trader cannot withdraw the proxy offer.
   * @raises IllegalPropertyName - If a property name is illegal.
   * @raises UnknownPropertyName - If the offer does not support the named property.
   * @raises PropertyTypeMismatch - If the type of a property does not match
   *                                the type specified in the service definition.
   * @raises ReadonlyDynamicProperty - If an attempt has been made to assign a dynamic
   *                                   property value to a mandatory property.
   * @raises MandatoryProperty - If an attemp has been made to delete a mandatory property
   * @raises ReadonlyProperty - If an attemp has been made to modify a read-only property
   * @raises DuplicatePropertyName - If duplicate property names are specified.
   */
  void modify (String id, String[] del_list, CosTrading.Property[] modify_list) throws CosTrading.NotImplemented, CosTrading.IllegalOfferId, CosTrading.UnknownOfferId, CosTrading.RegisterPackage.ProxyOfferId, CosTrading.IllegalPropertyName, CosTrading.RegisterPackage.UnknownPropertyName, CosTrading.PropertyTypeMismatch, CosTrading.ReadonlyDynamicProperty, CosTrading.RegisterPackage.MandatoryProperty, CosTrading.RegisterPackage.ReadonlyProperty, CosTrading.DuplicatePropertyName;

  /** This operation withdraws any offers matching the
   * specified constraints.
   *
   * @param type - The service type of offers to check. 
   * @param type - The constraint string to check offers against.
   *
   * @raises IllegalServiceType - If the specified service type
   *                              name is invalid.
   * @raises UnknownServiceType - If the specified service type
   *                              has not been registered.
   * @raises IllegalConstraint - If the constraint string is illegal.
   * @raises NoMatchingOffers - If no offers corresponding to the service type
   *                            and satisfying the constraints were found.
   */
  void withdraw_using_constraint (String type, String constr) throws CosTrading.IllegalServiceType, CosTrading.UnknownServiceType, CosTrading.IllegalConstraint, CosTrading.RegisterPackage.NoMatchingOffers;

  /** This opreration resolves the Register interface of a linked trader.
   *
   * @param name - The name of the linked trader. 
   *
   * @raises IllegalTraderName - If the specified trader name has invalid syntax.
   * @raises UnknownTraderName - If the specified trader cannot be found.
   * @raises RegisterNotSupported - If the specified trader does not support
   *                                the Register interface.
   */
  CosTrading.Register resolve (String[] name) throws CosTrading.RegisterPackage.IllegalTraderName, CosTrading.RegisterPackage.UnknownTraderName, CosTrading.RegisterPackage.RegisterNotSupported;
} // interface RegisterOperations
