package CosTrading;


/**
* CosTrading/LookupPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CosTrading.idl
* Wednesday, June 15, 2016 7:24:33 PM COT
*/


/** This interface is used to query the trader and retrieve
 * offers which match specified conditions and constraints.
 */
public abstract class LookupPOA extends org.omg.PortableServer.Servant
 implements CosTrading.LookupOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("query", new java.lang.Integer (0));
    _methods.put ("_get_lookup_if", new java.lang.Integer (1));
    _methods.put ("_get_register_if", new java.lang.Integer (2));
    _methods.put ("_get_link_if", new java.lang.Integer (3));
    _methods.put ("_get_proxy_if", new java.lang.Integer (4));
    _methods.put ("_get_admin_if", new java.lang.Integer (5));
    _methods.put ("_get_supports_modifiable_properties", new java.lang.Integer (6));
    _methods.put ("_get_supports_dynamic_properties", new java.lang.Integer (7));
    _methods.put ("_get_supports_proxy_offers", new java.lang.Integer (8));
    _methods.put ("_get_type_repos", new java.lang.Integer (9));
    _methods.put ("_get_def_search_card", new java.lang.Integer (10));
    _methods.put ("_get_max_search_card", new java.lang.Integer (11));
    _methods.put ("_get_def_match_card", new java.lang.Integer (12));
    _methods.put ("_get_max_match_card", new java.lang.Integer (13));
    _methods.put ("_get_def_return_card", new java.lang.Integer (14));
    _methods.put ("_get_max_return_card", new java.lang.Integer (15));
    _methods.put ("_get_max_list", new java.lang.Integer (16));
    _methods.put ("_get_def_hop_count", new java.lang.Integer (17));
    _methods.put ("_get_max_hop_count", new java.lang.Integer (18));
    _methods.put ("_get_def_follow_policy", new java.lang.Integer (19));
    _methods.put ("_get_max_follow_policy", new java.lang.Integer (20));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  /* doc: 25 */
       case 0:  // CosTrading/Lookup/query
       {
         try {
           String type = CosTrading.ServiceTypeNameHelper.read (in);
           String constr = CosTrading.ConstraintHelper.read (in);
           String pref = CosTrading.LookupPackage.PreferenceHelper.read (in);
           CosTrading.Policy policies[] = CosTrading.PolicySeqHelper.read (in);
           CosTrading.LookupPackage.SpecifiedProps desired_props = CosTrading.LookupPackage.SpecifiedPropsHelper.read (in);
           int how_many = in.read_ulong ();
           CosTrading.OfferSeqHolder offers = new CosTrading.OfferSeqHolder ();
           CosTrading.OfferIteratorHolder offer_iter = new CosTrading.OfferIteratorHolder ();
           CosTrading.PolicyNameSeqHolder limits_applied = new CosTrading.PolicyNameSeqHolder ();
           this.query (type, constr, pref, policies, desired_props, how_many, offers, offer_iter, limits_applied);
           out = $rh.createReply();
           CosTrading.OfferSeqHelper.write (out, offers.value);
           CosTrading.OfferIteratorHelper.write (out, offer_iter.value);
           CosTrading.PolicyNameSeqHelper.write (out, limits_applied.value);
         } catch (CosTrading.IllegalServiceType $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.IllegalServiceTypeHelper.write (out, $ex);
         } catch (CosTrading.UnknownServiceType $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.UnknownServiceTypeHelper.write (out, $ex);
         } catch (CosTrading.IllegalConstraint $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.IllegalConstraintHelper.write (out, $ex);
         } catch (CosTrading.LookupPackage.IllegalPreference $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.LookupPackage.IllegalPreferenceHelper.write (out, $ex);
         } catch (CosTrading.LookupPackage.IllegalPolicyName $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.LookupPackage.IllegalPolicyNameHelper.write (out, $ex);
         } catch (CosTrading.LookupPackage.PolicyTypeMismatch $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.LookupPackage.PolicyTypeMismatchHelper.write (out, $ex);
         } catch (CosTrading.LookupPackage.InvalidPolicyValue $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.LookupPackage.InvalidPolicyValueHelper.write (out, $ex);
         } catch (CosTrading.IllegalPropertyName $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.IllegalPropertyNameHelper.write (out, $ex);
         } catch (CosTrading.DuplicatePropertyName $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.DuplicatePropertyNameHelper.write (out, $ex);
         } catch (CosTrading.DuplicatePolicyName $ex) {
           out = $rh.createExceptionReply ();
           CosTrading.DuplicatePolicyNameHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // CosTrading/TraderComponents/_get_lookup_if
       {
         CosTrading.Lookup $result = null;
         $result = this.lookup_if ();
         out = $rh.createReply();
         CosTrading.LookupHelper.write (out, $result);
         break;
       }

       case 2:  // CosTrading/TraderComponents/_get_register_if
       {
         CosTrading.Register $result = null;
         $result = this.register_if ();
         out = $rh.createReply();
         CosTrading.RegisterHelper.write (out, $result);
         break;
       }

       case 3:  // CosTrading/TraderComponents/_get_link_if
       {
         CosTrading.Link $result = null;
         $result = this.link_if ();
         out = $rh.createReply();
         CosTrading.LinkHelper.write (out, $result);
         break;
       }

       case 4:  // CosTrading/TraderComponents/_get_proxy_if
       {
         CosTrading.Proxy $result = null;
         $result = this.proxy_if ();
         out = $rh.createReply();
         CosTrading.ProxyHelper.write (out, $result);
         break;
       }

       case 5:  // CosTrading/TraderComponents/_get_admin_if
       {
         CosTrading.Admin $result = null;
         $result = this.admin_if ();
         out = $rh.createReply();
         CosTrading.AdminHelper.write (out, $result);
         break;
       }

       case 6:  // CosTrading/SupportAttributes/_get_supports_modifiable_properties
       {
         boolean $result = false;
         $result = this.supports_modifiable_properties ();
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 7:  // CosTrading/SupportAttributes/_get_supports_dynamic_properties
       {
         boolean $result = false;
         $result = this.supports_dynamic_properties ();
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 8:  // CosTrading/SupportAttributes/_get_supports_proxy_offers
       {
         boolean $result = false;
         $result = this.supports_proxy_offers ();
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 9:  // CosTrading/SupportAttributes/_get_type_repos
       {
         org.omg.CORBA.Object $result = null;
         $result = this.type_repos ();
         out = $rh.createReply();
         org.omg.CORBA.ObjectHelper.write (out, $result);
         break;
       }

       case 10:  // CosTrading/ImportAttributes/_get_def_search_card
       {
         int $result = (int)0;
         $result = this.def_search_card ();
         out = $rh.createReply();
         out.write_ulong ($result);
         break;
       }

       case 11:  // CosTrading/ImportAttributes/_get_max_search_card
       {
         int $result = (int)0;
         $result = this.max_search_card ();
         out = $rh.createReply();
         out.write_ulong ($result);
         break;
       }

       case 12:  // CosTrading/ImportAttributes/_get_def_match_card
       {
         int $result = (int)0;
         $result = this.def_match_card ();
         out = $rh.createReply();
         out.write_ulong ($result);
         break;
       }

       case 13:  // CosTrading/ImportAttributes/_get_max_match_card
       {
         int $result = (int)0;
         $result = this.max_match_card ();
         out = $rh.createReply();
         out.write_ulong ($result);
         break;
       }

       case 14:  // CosTrading/ImportAttributes/_get_def_return_card
       {
         int $result = (int)0;
         $result = this.def_return_card ();
         out = $rh.createReply();
         out.write_ulong ($result);
         break;
       }

       case 15:  // CosTrading/ImportAttributes/_get_max_return_card
       {
         int $result = (int)0;
         $result = this.max_return_card ();
         out = $rh.createReply();
         out.write_ulong ($result);
         break;
       }

       case 16:  // CosTrading/ImportAttributes/_get_max_list
       {
         int $result = (int)0;
         $result = this.max_list ();
         out = $rh.createReply();
         out.write_ulong ($result);
         break;
       }

       case 17:  // CosTrading/ImportAttributes/_get_def_hop_count
       {
         int $result = (int)0;
         $result = this.def_hop_count ();
         out = $rh.createReply();
         out.write_ulong ($result);
         break;
       }

       case 18:  // CosTrading/ImportAttributes/_get_max_hop_count
       {
         int $result = (int)0;
         $result = this.max_hop_count ();
         out = $rh.createReply();
         out.write_ulong ($result);
         break;
       }

       case 19:  // CosTrading/ImportAttributes/_get_def_follow_policy
       {
         CosTrading.FollowOption $result = null;
         $result = this.def_follow_policy ();
         out = $rh.createReply();
         CosTrading.FollowOptionHelper.write (out, $result);
         break;
       }

       case 20:  // CosTrading/ImportAttributes/_get_max_follow_policy
       {
         CosTrading.FollowOption $result = null;
         $result = this.max_follow_policy ();
         out = $rh.createReply();
         CosTrading.FollowOptionHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:omg.org/CosTrading/Lookup:1.0", 
    "IDL:omg.org/CosTrading/TraderComponents:1.0", 
    "IDL:omg.org/CosTrading/SupportAttributes:1.0", 
    "IDL:omg.org/CosTrading/ImportAttributes:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Lookup _this() 
  {
    return LookupHelper.narrow(
    super._this_object());
  }

  public Lookup _this(org.omg.CORBA.ORB orb) 
  {
    return LookupHelper.narrow(
    super._this_object(orb));
  }


} // class LookupPOA
