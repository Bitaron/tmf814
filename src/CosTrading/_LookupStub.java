package CosTrading;


/**
* CosTrading/_LookupStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CosTrading.idl
* Wednesday, June 15, 2016 7:24:33 PM COT
*/


/** This interface is used to query the trader and retrieve
 * offers which match specified conditions and constraints.
 */
public class _LookupStub extends org.omg.CORBA.portable.ObjectImpl implements CosTrading.Lookup
{


  /* doc: 25 */
  public void query (String type, String constr, String pref, CosTrading.Policy[] policies, CosTrading.LookupPackage.SpecifiedProps desired_props, int how_many, CosTrading.OfferSeqHolder offers, CosTrading.OfferIteratorHolder offer_iter, CosTrading.PolicyNameSeqHolder limits_applied) throws CosTrading.IllegalServiceType, CosTrading.UnknownServiceType, CosTrading.IllegalConstraint, CosTrading.LookupPackage.IllegalPreference, CosTrading.LookupPackage.IllegalPolicyName, CosTrading.LookupPackage.PolicyTypeMismatch, CosTrading.LookupPackage.InvalidPolicyValue, CosTrading.IllegalPropertyName, CosTrading.DuplicatePropertyName, CosTrading.DuplicatePolicyName
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("query", true);
                CosTrading.ServiceTypeNameHelper.write ($out, type);
                CosTrading.ConstraintHelper.write ($out, constr);
                CosTrading.LookupPackage.PreferenceHelper.write ($out, pref);
                CosTrading.PolicySeqHelper.write ($out, policies);
                CosTrading.LookupPackage.SpecifiedPropsHelper.write ($out, desired_props);
                $out.write_ulong (how_many);
                $in = _invoke ($out);
                offers.value = CosTrading.OfferSeqHelper.read ($in);
                offer_iter.value = CosTrading.OfferIteratorHelper.read ($in);
                limits_applied.value = CosTrading.PolicyNameSeqHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:omg.org/CosTrading/IllegalServiceType:1.0"))
                    throw CosTrading.IllegalServiceTypeHelper.read ($in);
                else if (_id.equals ("IDL:omg.org/CosTrading/UnknownServiceType:1.0"))
                    throw CosTrading.UnknownServiceTypeHelper.read ($in);
                else if (_id.equals ("IDL:omg.org/CosTrading/IllegalConstraint:1.0"))
                    throw CosTrading.IllegalConstraintHelper.read ($in);
                else if (_id.equals ("IDL:omg.org/CosTrading/Lookup/IllegalPreference:1.0"))
                    throw CosTrading.LookupPackage.IllegalPreferenceHelper.read ($in);
                else if (_id.equals ("IDL:omg.org/CosTrading/Lookup/IllegalPolicyName:1.0"))
                    throw CosTrading.LookupPackage.IllegalPolicyNameHelper.read ($in);
                else if (_id.equals ("IDL:omg.org/CosTrading/Lookup/PolicyTypeMismatch:1.0"))
                    throw CosTrading.LookupPackage.PolicyTypeMismatchHelper.read ($in);
                else if (_id.equals ("IDL:omg.org/CosTrading/Lookup/InvalidPolicyValue:1.0"))
                    throw CosTrading.LookupPackage.InvalidPolicyValueHelper.read ($in);
                else if (_id.equals ("IDL:omg.org/CosTrading/IllegalPropertyName:1.0"))
                    throw CosTrading.IllegalPropertyNameHelper.read ($in);
                else if (_id.equals ("IDL:omg.org/CosTrading/DuplicatePropertyName:1.0"))
                    throw CosTrading.DuplicatePropertyNameHelper.read ($in);
                else if (_id.equals ("IDL:omg.org/CosTrading/DuplicatePolicyName:1.0"))
                    throw CosTrading.DuplicatePolicyNameHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                query (type, constr, pref, policies, desired_props, how_many, offers, offer_iter, limits_applied        );
            } finally {
                _releaseReply ($in);
            }
  } // query

  public CosTrading.Lookup lookup_if ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_lookup_if", true);
                $in = _invoke ($out);
                CosTrading.Lookup $result = CosTrading.LookupHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return lookup_if (        );
            } finally {
                _releaseReply ($in);
            }
  } // lookup_if

  public CosTrading.Register register_if ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_register_if", true);
                $in = _invoke ($out);
                CosTrading.Register $result = CosTrading.RegisterHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return register_if (        );
            } finally {
                _releaseReply ($in);
            }
  } // register_if

  public CosTrading.Link link_if ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_link_if", true);
                $in = _invoke ($out);
                CosTrading.Link $result = CosTrading.LinkHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return link_if (        );
            } finally {
                _releaseReply ($in);
            }
  } // link_if

  public CosTrading.Proxy proxy_if ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_proxy_if", true);
                $in = _invoke ($out);
                CosTrading.Proxy $result = CosTrading.ProxyHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return proxy_if (        );
            } finally {
                _releaseReply ($in);
            }
  } // proxy_if

  public CosTrading.Admin admin_if ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_admin_if", true);
                $in = _invoke ($out);
                CosTrading.Admin $result = CosTrading.AdminHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return admin_if (        );
            } finally {
                _releaseReply ($in);
            }
  } // admin_if

  public boolean supports_modifiable_properties ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_supports_modifiable_properties", true);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return supports_modifiable_properties (        );
            } finally {
                _releaseReply ($in);
            }
  } // supports_modifiable_properties

  public boolean supports_dynamic_properties ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_supports_dynamic_properties", true);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return supports_dynamic_properties (        );
            } finally {
                _releaseReply ($in);
            }
  } // supports_dynamic_properties

  public boolean supports_proxy_offers ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_supports_proxy_offers", true);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return supports_proxy_offers (        );
            } finally {
                _releaseReply ($in);
            }
  } // supports_proxy_offers

  public org.omg.CORBA.Object type_repos ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_type_repos", true);
                $in = _invoke ($out);
                org.omg.CORBA.Object $result = CosTrading.TypeRepositoryHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return type_repos (        );
            } finally {
                _releaseReply ($in);
            }
  } // type_repos

  public int def_search_card ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_def_search_card", true);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return def_search_card (        );
            } finally {
                _releaseReply ($in);
            }
  } // def_search_card

  public int max_search_card ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_max_search_card", true);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return max_search_card (        );
            } finally {
                _releaseReply ($in);
            }
  } // max_search_card

  public int def_match_card ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_def_match_card", true);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return def_match_card (        );
            } finally {
                _releaseReply ($in);
            }
  } // def_match_card

  public int max_match_card ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_max_match_card", true);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return max_match_card (        );
            } finally {
                _releaseReply ($in);
            }
  } // max_match_card

  public int def_return_card ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_def_return_card", true);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return def_return_card (        );
            } finally {
                _releaseReply ($in);
            }
  } // def_return_card

  public int max_return_card ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_max_return_card", true);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return max_return_card (        );
            } finally {
                _releaseReply ($in);
            }
  } // max_return_card

  public int max_list ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_max_list", true);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return max_list (        );
            } finally {
                _releaseReply ($in);
            }
  } // max_list

  public int def_hop_count ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_def_hop_count", true);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return def_hop_count (        );
            } finally {
                _releaseReply ($in);
            }
  } // def_hop_count

  public int max_hop_count ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_max_hop_count", true);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return max_hop_count (        );
            } finally {
                _releaseReply ($in);
            }
  } // max_hop_count

  public CosTrading.FollowOption def_follow_policy ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_def_follow_policy", true);
                $in = _invoke ($out);
                CosTrading.FollowOption $result = CosTrading.FollowOptionHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return def_follow_policy (        );
            } finally {
                _releaseReply ($in);
            }
  } // def_follow_policy

  public CosTrading.FollowOption max_follow_policy ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_max_follow_policy", true);
                $in = _invoke ($out);
                CosTrading.FollowOption $result = CosTrading.FollowOptionHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return max_follow_policy (        );
            } finally {
                _releaseReply ($in);
            }
  } // max_follow_policy

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:omg.org/CosTrading/Lookup:1.0", 
    "IDL:omg.org/CosTrading/TraderComponents:1.0", 
    "IDL:omg.org/CosTrading/SupportAttributes:1.0", 
    "IDL:omg.org/CosTrading/ImportAttributes:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _LookupStub
