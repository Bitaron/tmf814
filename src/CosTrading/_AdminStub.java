package CosTrading;


/**
* CosTrading/_AdminStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CosTrading.idl
* Wednesday, June 15, 2016 7:24:33 PM COT
*/


/** This interface is used to manage the various policies
 * and constraints applied by the trader.
 */
public class _AdminStub extends org.omg.CORBA.portable.ObjectImpl implements CosTrading.Admin
{

  public byte[] request_id_stem ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_request_id_stem", true);
                $in = _invoke ($out);
                byte $result[] = CosTrading.AdminPackage.OctetSeqHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return request_id_stem (        );
            } finally {
                _releaseReply ($in);
            }
  } // request_id_stem


  /* This operation sets the default search cardinality applied to queries. 
   *
   * @returns - The previous default search cardinality.
   * @param value - The new default serach cardinality.
   */
  public int set_def_search_card (int value)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("set_def_search_card", true);
                $out.write_ulong (value);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return set_def_search_card (value        );
            } finally {
                _releaseReply ($in);
            }
  } // set_def_search_card


  /* This operation sets the maximum search cardinality applied to queries. 
   *
   * @returns - The previous maximum search cardinality.
   * @param value - The new maximum search cardinality.
   */
  public int set_max_search_card (int value)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("set_max_search_card", true);
                $out.write_ulong (value);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return set_max_search_card (value        );
            } finally {
                _releaseReply ($in);
            }
  } // set_max_search_card


  /* This operation sets the default match cardinality applied to queries. 
   *
   * @returns - The previous default match cardinality.
   * @param value - The new default match cardinality.
   */
  public int set_def_match_card (int value)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("set_def_match_card", true);
                $out.write_ulong (value);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return set_def_match_card (value        );
            } finally {
                _releaseReply ($in);
            }
  } // set_def_match_card


  /* This operation sets the maximum match cardinality applied to queries. 
   *
   * @returns - The previous maximum match cardinality.
   * @param value - The new maximum match cardinality.
   */
  public int set_max_match_card (int value)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("set_max_match_card", true);
                $out.write_ulong (value);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return set_max_match_card (value        );
            } finally {
                _releaseReply ($in);
            }
  } // set_max_match_card


  /* This operation sets the default return cardinality applied to queries. 
   *
   * @returns - The previous default return cardinality.
   * @param value - The new default return cardinality.
   */
  public int set_def_return_card (int value)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("set_def_return_card", true);
                $out.write_ulong (value);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return set_def_return_card (value        );
            } finally {
                _releaseReply ($in);
            }
  } // set_def_return_card


  /* This operation sets the maximum return cardinality applied to queries. 
   *
   * @returns - The previous maximum return cardinality.
   * @param value - The new maximum return cardinality.
   */
  public int set_max_return_card (int value)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("set_max_return_card", true);
                $out.write_ulong (value);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return set_max_return_card (value        );
            } finally {
                _releaseReply ($in);
            }
  } // set_max_return_card


  /* This operation sets the maximum size for an iterator. 
   *
   * @returns - The previous maximum iterator size.
   * @param value - The new maximum iterator size.
   */
  public int set_max_list (int value)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("set_max_list", true);
                $out.write_ulong (value);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return set_max_list (value        );
            } finally {
                _releaseReply ($in);
            }
  } // set_max_list


  /* This operation sets the default hop count used when resolving
   * federated queries. 
   *
   * @returns - The previous default hop count.
   * @param value - The new default hop count.
   */
  public int set_def_hop_count (int value)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("set_def_hop_count", true);
                $out.write_ulong (value);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return set_def_hop_count (value        );
            } finally {
                _releaseReply ($in);
            }
  } // set_def_hop_count


  /* This operation sets the maximum hop count used when resolving
   * federated queries. 
   *
   * @returns - The previous maximum hop count.
   * @param value - The new maximum hop count.
   */
  public int set_max_hop_count (int value)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("set_max_hop_count", true);
                $out.write_ulong (value);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return set_max_hop_count (value        );
            } finally {
                _releaseReply ($in);
            }
  } // set_max_hop_count


  /* This operation sets whether the trader supports modifiable
   * properties.
   *
   * @returns - TRUE if modifiable properties were supported.
   * @param value - TRUE if modifiable properties are to be supported.
   */
  public boolean set_supports_modifiable_properties (boolean value)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("set_supports_modifiable_properties", true);
                $out.write_boolean (value);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return set_supports_modifiable_properties (value        );
            } finally {
                _releaseReply ($in);
            }
  } // set_supports_modifiable_properties


  /* This operation sets whether the trader supports dynamic
   * properties.
   *
   * @returns - TRUE if dynamic properties were supported.
   * @param value - TRUE if dynamic properties are to be supported.
   */
  public boolean set_supports_dynamic_properties (boolean value)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("set_supports_dynamic_properties", true);
                $out.write_boolean (value);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return set_supports_dynamic_properties (value        );
            } finally {
                _releaseReply ($in);
            }
  } // set_supports_dynamic_properties


  /* This operation sets whether the trader supports proxy 
   * offers.
   *
   * @returns - TRUE if proxy offers were supported.
   * @param value - TRUE if proxy offers are to be supported.
   */
  public boolean set_supports_proxy_offers (boolean value)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("set_supports_proxy_offers", true);
                $out.write_boolean (value);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return set_supports_proxy_offers (value        );
            } finally {
                _releaseReply ($in);
            }
  } // set_supports_proxy_offers


  /* This operation sets the default follow option applied to link
   * traversal for query resolution.
   *
   * @returns - The previous default follow option.
   * @param value - The new default follow option.
   */
  public CosTrading.FollowOption set_def_follow_policy (CosTrading.FollowOption policy)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("set_def_follow_policy", true);
                CosTrading.FollowOptionHelper.write ($out, policy);
                $in = _invoke ($out);
                CosTrading.FollowOption $result = CosTrading.FollowOptionHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return set_def_follow_policy (policy        );
            } finally {
                _releaseReply ($in);
            }
  } // set_def_follow_policy


  /* This operation sets the maximum follow option applied to link
   * traversal for query resolution.
   *
   * @returns - The previous maximum follow option.
   * @param value - The new maximum follow option.
   */
  public CosTrading.FollowOption set_max_follow_policy (CosTrading.FollowOption policy)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("set_max_follow_policy", true);
                CosTrading.FollowOptionHelper.write ($out, policy);
                $in = _invoke ($out);
                CosTrading.FollowOption $result = CosTrading.FollowOptionHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return set_max_follow_policy (policy        );
            } finally {
                _releaseReply ($in);
            }
  } // set_max_follow_policy


  /* This operation sets the maximum follow option that can
   * be applied to links.
   *
   * @returns - The previous maximum link follow option.
   * @param value - The new maximum link follow option.
   */
  public CosTrading.FollowOption set_max_link_follow_policy (CosTrading.FollowOption policy)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("set_max_link_follow_policy", true);
                CosTrading.FollowOptionHelper.write ($out, policy);
                $in = _invoke ($out);
                CosTrading.FollowOption $result = CosTrading.FollowOptionHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return set_max_link_follow_policy (policy        );
            } finally {
                _releaseReply ($in);
            }
  } // set_max_link_follow_policy


  /* This operation sets the service type repository for a trader.
   *
   * @returns - The previous service type repository.
   * @param repository - The new service type repository.
   */
  public org.omg.CORBA.Object set_type_repos (org.omg.CORBA.Object repository)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("set_type_repos", true);
                CosTrading.TypeRepositoryHelper.write ($out, repository);
                $in = _invoke ($out);
                org.omg.CORBA.Object $result = CosTrading.TypeRepositoryHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return set_type_repos (repository        );
            } finally {
                _releaseReply ($in);
            }
  } // set_type_repos


  /* This operation sets a request identifier stem value.
   * This is used to generate unique query identifiers to
   * prevent cyclic query resolution amongst federated traders.
   *
   * @returns - The previous identifier stem.
   * @param stem - The new identifier stem.
   */
  public byte[] set_request_id_stem (byte[] stem)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("set_request_id_stem", true);
                CosTrading.AdminPackage.OctetSeqHelper.write ($out, stem);
                $in = _invoke ($out);
                byte $result[] = CosTrading.AdminPackage.OctetSeqHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return set_request_id_stem (stem        );
            } finally {
                _releaseReply ($in);
            }
  } // set_request_id_stem


  /* doc: 19 */
  public void list_offers (int how_many, CosTrading.OfferIdSeqHolder ids, CosTrading.OfferIdIteratorHolder id_itr) throws CosTrading.NotImplemented
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("list_offers", true);
                $out.write_ulong (how_many);
                $in = _invoke ($out);
                ids.value = CosTrading.OfferIdSeqHelper.read ($in);
                id_itr.value = CosTrading.OfferIdIteratorHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:omg.org/CosTrading/NotImplemented:1.0"))
                    throw CosTrading.NotImplementedHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                list_offers (how_many, ids, id_itr        );
            } finally {
                _releaseReply ($in);
            }
  } // list_offers


  /* This operation returns a list of proxy offers made by the
   * trader. Offer identifiers not returned in the returned
   * sequence can be accessed through the returned iterator.
   *
   * @param how_many - The number of offers to return.
   * @param ids - The sequence of returned offer identifiers.
   * @param id_itr - The returned offer iterator.
   *
   * @raises NotImplemented - If the proxy interface is not implemented
   *  by the trader
   */
  public void list_proxies (int how_many, CosTrading.OfferIdSeqHolder ids, CosTrading.OfferIdIteratorHolder id_itr) throws CosTrading.NotImplemented
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("list_proxies", true);
                $out.write_ulong (how_many);
                $in = _invoke ($out);
                ids.value = CosTrading.OfferIdSeqHelper.read ($in);
                id_itr.value = CosTrading.OfferIdIteratorHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:omg.org/CosTrading/NotImplemented:1.0"))
                    throw CosTrading.NotImplementedHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                list_proxies (how_many, ids, id_itr        );
            } finally {
                _releaseReply ($in);
            }
  } // list_proxies

  public CosTrading.Lookup lookup_if ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_lookup_if", true);
                $in = _invoke ($out);
                CosTrading.Lookup $result = CosTrading.LookupHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return lookup_if (        );
            } finally {
                _releaseReply ($in);
            }
  } // lookup_if

  public CosTrading.Register register_if ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_register_if", true);
                $in = _invoke ($out);
                CosTrading.Register $result = CosTrading.RegisterHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return register_if (        );
            } finally {
                _releaseReply ($in);
            }
  } // register_if

  public CosTrading.Link link_if ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_link_if", true);
                $in = _invoke ($out);
                CosTrading.Link $result = CosTrading.LinkHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return link_if (        );
            } finally {
                _releaseReply ($in);
            }
  } // link_if

  public CosTrading.Proxy proxy_if ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_proxy_if", true);
                $in = _invoke ($out);
                CosTrading.Proxy $result = CosTrading.ProxyHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return proxy_if (        );
            } finally {
                _releaseReply ($in);
            }
  } // proxy_if

  public CosTrading.Admin admin_if ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_admin_if", true);
                $in = _invoke ($out);
                CosTrading.Admin $result = CosTrading.AdminHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return admin_if (        );
            } finally {
                _releaseReply ($in);
            }
  } // admin_if

  public boolean supports_modifiable_properties ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_supports_modifiable_properties", true);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return supports_modifiable_properties (        );
            } finally {
                _releaseReply ($in);
            }
  } // supports_modifiable_properties

  public boolean supports_dynamic_properties ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_supports_dynamic_properties", true);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return supports_dynamic_properties (        );
            } finally {
                _releaseReply ($in);
            }
  } // supports_dynamic_properties

  public boolean supports_proxy_offers ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_supports_proxy_offers", true);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return supports_proxy_offers (        );
            } finally {
                _releaseReply ($in);
            }
  } // supports_proxy_offers

  public org.omg.CORBA.Object type_repos ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_type_repos", true);
                $in = _invoke ($out);
                org.omg.CORBA.Object $result = CosTrading.TypeRepositoryHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return type_repos (        );
            } finally {
                _releaseReply ($in);
            }
  } // type_repos

  public int def_search_card ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_def_search_card", true);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return def_search_card (        );
            } finally {
                _releaseReply ($in);
            }
  } // def_search_card

  public int max_search_card ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_max_search_card", true);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return max_search_card (        );
            } finally {
                _releaseReply ($in);
            }
  } // max_search_card

  public int def_match_card ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_def_match_card", true);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return def_match_card (        );
            } finally {
                _releaseReply ($in);
            }
  } // def_match_card

  public int max_match_card ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_max_match_card", true);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return max_match_card (        );
            } finally {
                _releaseReply ($in);
            }
  } // max_match_card

  public int def_return_card ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_def_return_card", true);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return def_return_card (        );
            } finally {
                _releaseReply ($in);
            }
  } // def_return_card

  public int max_return_card ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_max_return_card", true);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return max_return_card (        );
            } finally {
                _releaseReply ($in);
            }
  } // max_return_card

  public int max_list ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_max_list", true);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return max_list (        );
            } finally {
                _releaseReply ($in);
            }
  } // max_list

  public int def_hop_count ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_def_hop_count", true);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return def_hop_count (        );
            } finally {
                _releaseReply ($in);
            }
  } // def_hop_count

  public int max_hop_count ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_max_hop_count", true);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return max_hop_count (        );
            } finally {
                _releaseReply ($in);
            }
  } // max_hop_count

  public CosTrading.FollowOption def_follow_policy ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_def_follow_policy", true);
                $in = _invoke ($out);
                CosTrading.FollowOption $result = CosTrading.FollowOptionHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return def_follow_policy (        );
            } finally {
                _releaseReply ($in);
            }
  } // def_follow_policy

  public CosTrading.FollowOption max_follow_policy ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_max_follow_policy", true);
                $in = _invoke ($out);
                CosTrading.FollowOption $result = CosTrading.FollowOptionHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return max_follow_policy (        );
            } finally {
                _releaseReply ($in);
            }
  } // max_follow_policy

  public CosTrading.FollowOption max_link_follow_policy ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_max_link_follow_policy", true);
                $in = _invoke ($out);
                CosTrading.FollowOption $result = CosTrading.FollowOptionHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return max_link_follow_policy (        );
            } finally {
                _releaseReply ($in);
            }
  } // max_link_follow_policy

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:omg.org/CosTrading/Admin:1.0", 
    "IDL:omg.org/CosTrading/TraderComponents:1.0", 
    "IDL:omg.org/CosTrading/SupportAttributes:1.0", 
    "IDL:omg.org/CosTrading/ImportAttributes:1.0", 
    "IDL:omg.org/CosTrading/LinkAttributes:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _AdminStub
