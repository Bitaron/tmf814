package emsSessionFactory;


/**
* emsSessionFactory/_EmsSessionFactory_IStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from emsSessionFactory.idl
* Wednesday, June 15, 2016 7:24:35 PM COT
*/


/**
   * <p>There is a single instance of the EmsSessionFactory_I.  It is the 
   * entry point to the server/EMS.
   * This instance the object reference that the client uses to connect to the 
   * server.</p>
   *
   * <p>This interface implements the version interface and will return 
   * the server IDL version when getVersion is called on it.</p>
   **/
public class _EmsSessionFactory_IStub extends org.omg.CORBA.portable.ObjectImpl implements emsSessionFactory.EmsSessionFactory_I
{


  /**
     * This operation allows the NMS to obtain the EmsSession_I object from
     * which all managers of the EMS can be obtained.
     *
     * <br>user: The (registered) user or application that is trying 
     * to access the server, can be empty string to indicate that no 
     * authentication mechanism is implemented by the server/EMS
     * <br>password: The password of the user, can be empty string
     * <br>client: A handle to the NmsSession_I object instantiated at the 
     * NMS, to which the returned EmsSession_I object has to be associated
     * <br>emsSessionInterface: A CORBA IOR for the EmsSession_I interface
     * <br><b>Raises</b> globaldefs::ProcessingFailureException <br>
     * EXCPT_NOT_IMPLEMENTED - Raised if the EMS does not support this service<br>
     * EXCPT_INTERNAL_ERROR - Raised in case of a non-specific EMS internal 
     *  failure<br>
     * EXCPT_UNABLE_TO_COMPLY - If the EMS cannot comply with the request, 
     * and cannot determine the reason it could not comply, 
     * it may raise this exception. <br>
     * EXCPT_INVALID_INPUT - Raised when client is invalid<br>
     * EXCPT_ACCESS_DENIED - Raised in case of security violation<br>
     **/
  public void getEmsSession (String user, String password, nmsSession.NmsSession_I client, emsSession.EmsSession_IHolder emsSessionInterface) throws globaldefs.ProcessingFailureException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getEmsSession", true);
                $out.write_string (user);
                $out.write_string (password);
                nmsSession.NmsSession_IHelper.write ($out, client);
                $in = _invoke ($out);
                emsSessionInterface.value = emsSession.EmsSession_IHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:mtnm.tmforum.org/globaldefs/ProcessingFailureException:1.0"))
                    throw globaldefs.ProcessingFailureExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                getEmsSession (user, password, client, emsSessionInterface        );
            } finally {
                _releaseReply ($in);
            }
  } // getEmsSession


  /**
     * <p>This service returns the version of the IDL that the corresponding 
     * EMS object supports.</p>
     *
     * The format of the return string is as follows:
     * <i>Release</i>.<i>Major</i>[.<i>Minor</i>] where <i>Release</i>,
     * <i>Major</i> and <i>Minor</i> are strings 
     * that contain only digits.
     * 
     * For example, 2.1 indicates release 2 and major release 1, 
     * 1.3 indicates release 1 and major release 3, and so on.
     * Note that x.y has the same meaning as x.y.0 
     * 
     * The minor digit is used for bug fixing the major release.  
     * e.g 1.2.1 is a minor release on 1.2.   
     *
     * Any changes to any IDL files must be approved by the 
     * Specification Authority.
     *
     * For TMF 814 version 2.1, the version is "2.1".
     * For TMF 814 version 3.0, the version is "3_0" or "3.0".
     *
     * <br><b>Returns</b> string: The version of the interface 
     **/
  public String getVersion ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getVersion", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getVersion (        );
            } finally {
                _releaseReply ($in);
            }
  } // getVersion

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:mtnm.tmforum.org/emsSessionFactory/EmsSessionFactory_I:1.0", 
    "IDL:mtnm.tmforum.org/mtnmVersion/Version_I:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _EmsSessionFactory_IStub
